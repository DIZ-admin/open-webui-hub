name: ‚ö° Quick Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # ============================================================================
  # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  # ============================================================================
  quick-validation:
    name: ‚ö° Quick Validation
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üîç Check workflow files
        run: |
          echo "üîç Validating GitHub Actions workflows..."
          for workflow in .github/workflows/*.yml; do
            if [ -f "$workflow" ]; then
              echo "Checking $workflow"
              # Basic YAML syntax check
              python -c "import yaml; yaml.safe_load(open('$workflow'))" || {
                echo "‚ùå Invalid YAML in $workflow"
                exit 1
              }
            fi
          done
          echo "‚úÖ All workflow files are valid"

      - name: üîç Check basic file structure
        run: |
          echo "üîç Checking project structure..."
          
          # Check essential files exist
          essential_files=(
            "README.md"
            "CONTRIBUTING.md"
            ".gitignore"
            "compose.local.yml"
          )
          
          for file in "${essential_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "‚ùå Missing essential file: $file"
              exit 1
            else
              echo "‚úÖ Found: $file"
            fi
          done

      - name: üîç Check services structure
        run: |
          echo "üîç Checking services structure..."
          
          services=("docling" "HUB")
          for service in "${services[@]}"; do
            service_dir="services/$service"
            if [ ! -d "$service_dir" ]; then
              echo "‚ùå Missing service directory: $service_dir"
              exit 1
            fi
            
            dockerfile="$service_dir/Dockerfile"
            if [ ! -f "$dockerfile" ]; then
              echo "‚ùå Missing Dockerfile in $service_dir"
              exit 1
            fi
            
            echo "‚úÖ Service $service structure is valid"
          done

      - name: üîç Check Docker Compose files
        run: |
          echo "üîç Checking Docker Compose files..."
          
          compose_files=("compose.local.yml")
          for compose_file in "${compose_files[@]}"; do
            if [ -f "$compose_file" ]; then
              echo "Checking $compose_file"
              # Basic YAML syntax check
              python -c "import yaml; yaml.safe_load(open('$compose_file'))" || {
                echo "‚ùå Invalid YAML in $compose_file"
                exit 1
              }
              echo "‚úÖ $compose_file is valid"
            fi
          done

      - name: üîç Check environment files structure
        run: |
          echo "üîç Checking environment files structure..."
          
          if [ ! -d "env" ]; then
            echo "‚ùå Missing env directory"
            exit 1
          fi
          
          # Check for example files
          example_files=$(find env -name "*.example" | wc -l)
          if [ "$example_files" -eq 0 ]; then
            echo "‚ùå No .example files found in env directory"
            exit 1
          fi
          
          echo "‚úÖ Found $example_files environment example files"

      - name: üîç Check documentation structure
        run: |
          echo "üîç Checking documentation structure..."
          
          if [ ! -d "docs" ]; then
            echo "‚ùå Missing docs directory"
            exit 1
          fi
          
          # Check for key documentation files
          doc_files=$(find docs -name "*.md" | wc -l)
          if [ "$doc_files" -eq 0 ]; then
            echo "‚ùå No documentation files found"
            exit 1
          fi
          
          echo "‚úÖ Found $doc_files documentation files"

      - name: üìä Summary
        run: |
          echo "üéâ Quick validation completed successfully!"
          echo "‚úÖ GitHub Actions workflows: Valid"
          echo "‚úÖ Project structure: Valid"
          echo "‚úÖ Services structure: Valid"
          echo "‚úÖ Docker Compose files: Valid"
          echo "‚úÖ Environment files: Present"
          echo "‚úÖ Documentation: Present"
          echo ""
          echo "üöÄ Project is ready for development!"
